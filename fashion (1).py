# -*- coding: utf-8 -*-
"""Fashion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q3rqBsqYT4n84_bxq-jNaypNqntbSfy1
"""

import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as py
import numpy as np



fashion=keras.datasets.fashion_mnist
(train_images,train_labels),(test_images,test_label)=fashion.load_data()

train_images.shape

train_labels

py.figure()

py.imshow(train_images[0])
py.colorbar()
py.grid(False)

class_names=['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']
train_images=train_images/255
test_images=test_images/255
train_images[0]

py.figure(figsize=(10,10))
for i in range(25):
  py.subplot(5,5,i+1)
  py.xticks([])
  py.yticks([])
  py.grid(False)
  py.imshow(train_images[i])
  py.xlabel(class_names[train_labels[i]])
py.show()

model=keras.Sequential([
    keras.layers.Flatten(input_shape=(28,28)),
    keras.layers.Dense(128,activation=tf.nn.relu),
    keras.layers.Dense(128,activation=tf.nn.relu),
    keras.layers.Dense(10,activation=tf.nn.softmax)
    
])

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=["accuracy"])

model.fit(train_images,train_labels,epochs=10)

test_acc=model.evaluate(test_images,test_label)
print(test_acc)

pred=model.predict(test_images)

pred[0]

np.argmax(pred[0])

pred[0].shape

test_label[0]

def plot(i,pred_array,true_label,image):
  pred_array,true_label,image= pred_array[i], true_label[i], image[i]
  py.grid(False)
  py.xticks([])
  py.yticks([])
  py.imshow(image)
  pred_label=np.argmax(pred_array)
  if pred_label==true_label:
    color='blue'
  else:
    color='red'
  py.xlabel("{} {:2.0f}% ({})".format(class_names[pred_label], 100*np.max(pred_array),class_names[true_label]),color=color)
            
            
def plot_value(i,pred_array,true_label,image):
  pred_array,true_label,image= pred_array[i], true_label[i], image[i]
  py.grid(False)
  py.xticks([])
  py.yticks([])
  thisplot=py.bar(range(10),pred_array, color="#777777")
  py.ylim([0,1])
  pred_label=np.argmax(pred_array)
  thisplot[pred_label].set_color('red')
  thisplot[true_label].set_color('blue')

i=0
py.figure(figsize=(6,3))
py.subplot(1,2,1)
plot(i,pred,test_label,test_images)
py.subplot(1,2,2)
plot_value(i,pred,test_label,test_images)

